name: CI/CD Docker Nginx

on:
 push:
    paths:
      - 'index.html'
      - 'Dockerfile'
      - 'docker-compose.yml'  # Este pipeline se ejecutará cada vez que se actualice index.html
    branches:
      - 'main'
 pull_request:
    paths:
      - 'index.html'  # También se ejecutará en PRs que afecten index.html
    branches:
      - 'main'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Chequear el código desde GitHub
      - name: Checkout code
        uses: actions/checkout@v4

      # Paso 2: Configurar Docker (si no lo está ya)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v4

      # Paso 3: Iniciar sesión en Docker Hub (para subir la imagen)
      - name: Log in to Docker Hub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Paso 4: Construir la imagen Docker
      - name: Build Docker image
        run: |
           docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-custom:${{ github.sha }} \
                      -t ${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest .

          

      # Paso 5: Subir la imagen Docker a Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-custom:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-custom:latest

      # Optional: Add basic testing
      - name: Test container
        run: |
          docker run -d -p 8080:80 --name test-nginx ${{ secrets.DOCKER_USERNAME }}/nginx-custom:${{ github.sha }}
          sleep 5
          curl -s --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080
          docker stop test-nginx
          docker rm test-nginx
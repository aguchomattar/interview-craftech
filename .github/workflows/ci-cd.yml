name: CI/CD Docker Nginx

on:
  push:
    paths:
      - 'index.html'
      - 'Dockerfile'
      - 'docker-compose.yml'  # Este pipeline se ejecutará cada vez que se actualice index.html
    branches:
      - 'main'
  pull_request:
    paths:
      - 'index.html'  # También se ejecutará en PRs que afecten index.html
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Chequear el código desde GitHub
      - name: Checkout code
        uses: actions/checkout@v2

      # Paso 2: Configurar Docker (si no lo está ya)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Iniciar sesión en Docker Hub (para subir la imagen)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Paso 4: Construir la imagen Docker
      - name: Build Docker image
        run: |
           docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-custom:${{ github.sha }} .

          

      # Paso 5: Subir la imagen Docker a Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-custom:${{ github.sha }}

  # Desplegar en el servidor (con SSH)
      - name: Deploy to server (Docker Compose)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd /interview-craftech
            docker-compose down
            docker-compose up -d
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
